#!/usr/bin/env perl
use Mojolicious::Lite;
use Mojo::IOLoop;

app->{timer_stats} = {
    started => 0,
    active => 0,
    elapsed => 0,
};

get '/' => sub {
  my $c = shift;

  # fill in template variables
  map { $c->stash($_ => app->{timer_stats}->{$_})} qw(started active elapsed);
  $c->render(template => 'index');
};

get '/add_timer/#seconds' => sub {
  my $c = shift;
  my $s = $c->param('seconds');

  if (0 == $s) {
    $c->render(text => "4d19f4c4: number of seconds to wait can't be 0!");
  } else {

    # Pointer to app's global 'count' data
    my $stats = $c->app->{timer_stats};

    # Add a timer (copied from Mojo::IOLoop man page)
    Mojo::IOLoop->timer($s => sub {
	my $loop = shift;
	# Figure out what the following should be later
	# $loop->remove($id);
	$stats->{active}--;
	$stats->{elapsed}++;
	say "Timer expired";
    });

    $stats->{started}++;
    $stats->{active}++;

    $c->render(text => "Added a timer of $s seconds.\n"
	       # . "Set global 'started' count to $stats->{started}\n"
    );
  }
};

# Start event loop if necessary
Mojo::IOLoop->start unless Mojo::IOLoop->is_running;

app->start;
__DATA__

@@ index.html.ep
% layout 'default';
% title 'Welcome';
<h1>Event-Driven Programming Demo</h1>

Here's what we know about our timers:

<ul>
<li>started: <%= $started %></li><li>active: <%= $active %></li><li>elapsed: <%= $elapsed %></li>
</ul>

@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head><title><%= title %></title></head>
  <body><%= content %></body>
</html>
